// Define an array containing the colors of the buttons in the game.
var buttonColours = ["red", "blue", "green", "yellow"];

// Initialize an empty array to store the sequence of colors generated by the game.
var gamePattern = [];

// Initialize an empty array to store the sequence of colors clicked by the user.
var userClickedPattern = [];

// Initialize a variable to keep track of whether the game has started or not.
var started = false;

// Initialize a variable to keep track of the current level of the game.
var level = 0;

// When a key is pressed, if the game hasn't started, start the game and display the current level.
$(document).keydown(function () {
    if (!started) {
        $("#level-title").text("Level " + level);
        nextSequence();
        started = true;
    }
});

// When a button is clicked, store the clicked color, play its corresponding sound, animate the button press, and check the user's answer.
$(".btn").click(function () {
    var userChosenColour = $(this).attr("id");
    userClickedPattern.push(userChosenColour);
    playSound(userChosenColour);
    animatePress(userChosenColour);
    checkAnswer(userClickedPattern.length - 1);
});

// Check if the user's answer matches the game's pattern at the current level.
function checkAnswer(currentLevel) {
    if (gamePattern[currentLevel] === userClickedPattern[currentLevel]) {
        console.log("success");
        // If the user has completed the current level's sequence, proceed to the next level after a delay.
        if (userClickedPattern.length === gamePattern.length) {
            setTimeout(function () {
                nextSequence();
            }, 1000);
        }
    } else {
        // If the user's answer is incorrect, play the wrong sound, display a visual indication of failure, update the title, and restart the game.
        playSound("wrong");
        $("body").addClass("game-over");
        setTimeout(function () {
            $("body").removeClass("game-over");
        }, 200);
        $("#level-title").text("Game Over, Press Any Key to Restart");
        startOver();
    }
}

// Generate the next color sequence for the game.
function nextSequence() {
    // Clear the user's clicked pattern for the next round.
    userClickedPattern = [];
    // Increment the level and display the new level.
    level++;
    $("#level-title").text("Level " + level);
    // Generate a random number to select a color from the buttonColours array.
    var randomNumber = Math.floor(Math.random() * 4);
    var randomChosenColour = buttonColours[randomNumber];
    // Add the randomly chosen color to the game pattern and animate its display.
    gamePattern.push(randomChosenColour);
    $("#" + randomChosenColour)
        .fadeIn(100)
        .fadeOut(100)
        .fadeIn(100);
    playSound(randomNumber);
}

// Play sound corresponding to a given name.
function playSound(name) {
    var audio = new Audio("./sounds/" + name + ".mp3");
    audio.play();
}

// Add a visual animation to simulate button press.
function animatePress(currentColour) {
    $("#" + currentColour).addClass("pressed");
    setTimeout(function () {
        $("#" + currentColour).removeClass("pressed");
    }, 100);
}

// Reset the game to its initial state.
function startOver() {
    level = 0;
    gamePattern = [];
    started = false;
}
